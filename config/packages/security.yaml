security:
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    default_provider:
      id: App\Security\UserProvider

  access_decision_manager:
    strategy: unanimous

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      request_matcher: App\Security\RequestMatcher\ApiSessionRequestMatcher
      stateless: true
      custom_authenticators:
        - App\Api\Security\ApiAuthenticator
    main:
      pattern: ^/
      entry_point: oidc
      oidc:
        login_path: app_default_landing
        success_handler: App\Security\Http\Authentication\AuthenticationSuccessHandler
        user_identifier_property: email
      form_login:
        login_path: app_default_landing
        success_handler: App\Security\Http\Authentication\AuthenticationSuccessHandler
        username_parameter: "login[_username]"
        password_parameter: "login[_password]"
      logout:
        path: logout
        target: app_default_landing

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/_wdt/.*, roles: PUBLIC_ACCESS }
    - { path: ^/_profiler/.*, roles: PUBLIC_ACCESS }
    - { path: ^/login.*, roles: PUBLIC_ACCESS }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
