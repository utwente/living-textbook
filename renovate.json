{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "extends": [
        "config:base",
        ":automergeDisabled",
        ":disableDevDependencies",
        ":labels(Maintenance,RenovateBot)"
    ],
    "ignorePresets": [
        "group:symfony"
    ],
    "dependencyDashboard": true,
    "dependencyDashboardLabels": ["Maintenance", "RenovateBot"],
    "commitMessagePrefix": "[RenovateBot]",
    "composerIgnorePlatformReqs": [
        "ext-apcu",
        "ext-calendar",
        "ext-decimal",
        "ext-exif",
        "ext-gd",
        "ext-imagick",
        "ext-intl",
        "ext-ldap",
        "ext-pdo",
        "ext-sodium",
        "ext-xsl",
        "ext-zip"
    ],
    "internalChecksFilter": "strict",
    "lockFileMaintenance": {
      "enabled": true,
      "rebaseWhen": "auto",
      "schedule": "before 9am on monday"
    },
    "npmrc": "registry=https://registry.yarnpkg.com",
    "platformAutomerge": true,
    "postUpdateOptions": [
        "yarnDedupeFewer"
    ],
    "prConcurrentLimit": 0,
    "prHourlyLimit": 10,
    "rangeStrategy": "pin",
    "rebaseWhen": "never",
    "minimumReleaseAge": "7 days",
    "timezone": "Europe/Amsterdam",
    "packageRules": [
        {
            "matchDepNames": ["php"],
            "rangeStrategy": "replace"
        },
        {
            "enabled": true,
            "matchPackagePrefixes": ["drenso/", "@drenso/"],
            "rebaseWhen": "conflicted",
            "minimumReleaseAge": null
        },
        {
            "matchPackagePrefixes": ["twig/"],
            "rebaseWhen": "conflicted",
            "minimumReleaseAge": null
        },
        {
            "matchPackagePrefixes": ["symfony/"],
            "groupName": "Symfony packages",
            "groupSlug": "symfony",
            "excludePackagePatterns": "-contracts$",
            "excludePackageNames": [
                "symfony/maker-bundle",
                "symfony/webpack-encore-bundle"
            ],
            "minimumReleaseAge": null
        },
        {
            "matchPackagePatterns": ["^symfony/[\\w+-]+-contracts$"],
            "groupName": "Symfony contracts",
            "groupSlug": "symfony-contracts",
            "minimumReleaseAge": null
        },
        {
            "matchPackagePrefixes": ["@types/"],
            "enabled": true
        },
        {
            "matchUpdateTypes": ["minor", "patch", "pin", "digest"],
            "matchPackagePrefixes": ["@types/"],
            "rebaseWhen": "auto",
            "automerge": true,
            "minimumReleaseAge": null
        },
        {
            "matchUpdateTypes": ["minor", "patch"],
            "matchPackageNames": ["@types/node"],
            "enabled": false
        },
        {
            "matchPackageNames": ["jms/serializer"],
            "groupName": "JMS serializer packages",
            "groupSlug": "jms-serializer"
        },
        {
            "matchPackagePrefixes": ["datatables.net"],
            "groupName": "DataTables packages",
            "groupSlug": "datatables"
        }, 
        {
            "matchPackageNames": ["autoprefixer", "browserslist", "postcss"],
            "groupName": "CSS processing dependencies",
            "groupSlug": "css-dependencies"
        },
        {
            "matchPackagePrefixes": ["Sentry"],
            "matchManagers": ["nuget"],
            "groupName": "Sentry packages",
            "groupSlug": "sentry"
        },
        {
            "matchPackagePatterns": ["^twig/twig$", "^twig/\\w+-extra$", "^twig/extra-bundle$"],
            "groupName": "Twig packages",
            "groupSlug": "twig"
        },
        {
            "matchDepTypes": [
                "engines"
            ],
            "enabled": false
        },
        {
            "matchPackageNames": ["@utwente/dotron-app"],
            "rebaseWhen": "conflicted",
            "minimumReleaseAge": null
        }
    ],
    "customManagers": [
        {
            "customType": "regex",
            "fileMatch": ["^\\.gitlab-ci\\.yml$"],
            "matchStrings": [
                "#\\s?renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?_VERSION: (?<currentValue>.*)\\s"
            ],
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
            "extractVersionTemplate": "^v?(?<version>.*)$"
        }
    ]
}
